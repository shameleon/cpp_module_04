	WrongCat	wrong1 = WrongCat();
	wrong1.setBrain(EMO_WrongCat2, 0);
	wrong1.setBrain(IDEA_RAT, 1);
	wrong1.setBrain(EMO_WRENCH, 2);
	std::cout << COL_PUR << std::endl;
	WrongCat	wrong2 = WrongCat(wrong1);
	std::cout << COL_CYA << std::endl;
	WrongCat	*wrong3 = new WrongCat();

	std::cout << COL_RES << std::endl;
	wrong1.setBrain(IDEA_COLLISON, 3);
	wrong1.setBrain(IDEA_FORK, 4);
	wrong1.setBrain(IDEA_MEAT_ON_BONE, 5);
	std::cout << "wrong1 : " << wrong1;
	wrong1.getBrain();
	std::cout << "wrong2 : " << wrong2;
	wrong2.getBrain();
	std::cout << "wrong3 : " << *wrong3;
	wrong3->getBrain();
	std::cout << COL_CYA << std::endl;
	*wrong3 = wrong1;
	std::cout << COL_RES;
	std::cout << "wrong3 : " << *wrong3;
	wrong3->getBrain();
	std::cout <<  std::endl;
	std::cout << "______________________________________________" << std::endl;
	wrong1.setBrain(EMO_STAR, 0);
	wrong1.setBrain(EMO_STAR, 5);
	wrong2.setBrain(EMO_STAR, 2);
	wrong3->setBrain(EMO_STAR, 1);
	wrong3->setBrain(EMO_STAR, 3);
	std::cout << "wrong1 : " << wrong1;
	wrong1.getBrain();
	std::cout << "wrong2 : " << wrong2;
	wrong2.getBrain();
	std::cout << "wrong3 : " << *wrong3;
	wrong3->getBrain();
	delete wrong3;